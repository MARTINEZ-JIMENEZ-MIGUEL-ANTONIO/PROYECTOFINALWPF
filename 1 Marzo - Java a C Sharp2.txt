using System;

public class Persona
{
    //Constantes
    /**
    * Sexo por defecto
*/
    private const char SEXO_DEF = 'H';
    /**
 * El peso de la persona esta por debajo del peso ideal
 */
    public const int INFRAPESO = -1;

    /**
     * El peso de la persona esta en su peso ideal
     */
    public const int PESO_IDEAL = 0;

    /**
     * El peso de la persona esta por encima del peso ideal
     */
    public const int SOBREPESO = 1;

    //Atributos
    /**
     * Nombre de la persona
     */
    private string nombre;

    /**
     * Edad de la persona
     */
    private int edad;

    /**
     * DNI de la persona, se genera al construir el objeto
     */
    private string DNI;

    /**
     * Sexo de la persona, H hombre M mujer
     */
    private char sexo;

    /**
     * Peso de la persona
     */
    private double peso;

    /**
     * Altura de la persona
     */
    private double altura;

    //Contructores
    /**
     * Constructor por defecto
     */
    public Persona() : this("", 0, SEXO_DEF, 0, 0) { }

    /**
     * Constructor con 3 parametroe
     *
     * @param nombre de la persona
     * @param edad de la persona
     * @param sexo de la persona
     */
    public Persona(string nombre, int edad, char sexo) : this(nombre, edad, sexo, 0, 0) { }

    /**
     * Constructor con 5 parametros
     *
     * @param nombre de la persona
     * @param edad de la persona
     * @param sexo de la persona
     * @param peso de la persona
     * @param altura de la persona
     */
    public Persona(string nombre, int edad, char sexo, double peso, double altura)
    {
        this.nombre = nombre;
        this.edad = edad;
        this.peso = peso;
        this.altura = altura;
        generarDni();
        this.sexo = sexo;
        comprobarSexo();
    }

    //Métodos privados
    private void comprobarSexo()
    {
        //Si el sexo no es una H o una M, por defecto es H
        if (sexo != 'H' && sexo != 'M')
        {
            this.sexo = SEXO_DEF;
        }
    }

    private void generarDni()
    {
        const int divisor = 23;

        //Generamos un número de 8 digitos
        int numDNI = ((int)Math.Floor(new Random().NextDouble() * (100000000 - 10000000) + 10000000));
        int res = numDNI - (numDNI / divisor * divisor);

        //Calculamos la letra del DNI
        char letraDNI = generaLetraDNI(res);

        //Pasamos el DNI a String
        DNI = numDNI.ToString() + letraDNI;
    }

    private char generaLetraDNI(int res)
    {
        char[] letras = { 'T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E' };
        return letras[res];
    }

    public void setNombre(String nombre)
    {
        this.nombre = nombre;
    }

    public void setEdad(int edad)
    {
        this.edad = edad;
    }

    public void setSexo(char sexo)
    {
        this.sexo = sexo;
    }

    public void setPeso(double peso)
    {
        this.peso = peso;
    }

    public void setAltura(double altura)
    {
        this.altura = altura;
    }

    public int CalcularIMC()
    {
        //Calculamos el peso de la persona
        double pesoActual = peso / (Math.Pow(altura, 2));
        //Segun el peso, devuelve un codigo
        if (pesoActual >= 20 && pesoActual <= 25)
        {
            return PESO_IDEAL;
        }
        else if (pesoActual < 20)
        {
            return INFRAPESO;
        }
        else
        {
            return SOBREPESO;
        }
    }

    /**

Indica si la persona es mayor de edad
@return true si es mayor de edad y false es menor de edad
*/
    public bool EsMayorDeEdad()
    {
        bool mayor = false;
        if (edad >= 18)
        {
            mayor = true;
        }
        return mayor;
    }
    /**

Devuelve informacion del objeto
@return cadena con toda la informacion
*/
    public override string ToString()
    {
        string sexo;
        if (this.sexo == 'H')
        {
            sexo = "hombre";
        }
        else
        {
            sexo = "mujer";
        }
        return "Informacion de la persona:\n"
        + "Nombre: " + nombre + "\n"
        + "Sexo: " + sexo + "\n"
        + "Edad: " + edad + " años\n"
        + "DNI: " + DNI + "\n"
        + "Peso: " + peso + " kg\n"
        + "Altura: " + altura + " metros\n";
    }
}


class PersonaApp
{
    static void Main(string[] args)
    {
        // Introducimos los datos
        string nombre = Console.ReadLine();
        Console.Write("Introduce la edad: ");
        int edad = int.Parse(Console.ReadLine());

        Console.Write("Introduce el sexo: ");
        char sexo = char.Parse(Console.ReadLine());

        Console.Write("Introduce el peso: ");
        double peso = double.Parse(Console.ReadLine());

        Console.Write("Introduce la altura: ");
        double altura = double.Parse(Console.ReadLine());

        // Creamos objetos con cada constructor
        Persona persona1 = new Persona();
        Persona persona2 = new Persona(nombre, edad, sexo);
        Persona persona3 = new Persona(nombre, edad, sexo, peso, altura);

        // Los datos que no esten completos los insertamos con los metodos set
        persona1.setNombre("Laura");
        persona1.setEdad(30);
        persona1.setSexo('M');
        persona1.setPeso(60);
        persona1.setAltura(1.60);

        persona2.setPeso(90.5);
        persona2.setAltura(1.80);

        // Usamos metodos para realizar la misma accion para cada objeto
        Console.WriteLine("Persona1");
        MuestraMensajePeso(persona1);
        MuestraMayorDeEdad(persona1);
        Console.WriteLine(persona1.ToString());

        Console.WriteLine("Persona2");
        MuestraMensajePeso(persona2);
        MuestraMayorDeEdad(persona2);
        Console.WriteLine(persona2.ToString());

        Console.WriteLine("Persona3");
        MuestraMensajePeso(persona3);
        MuestraMayorDeEdad(persona3);
        Console.WriteLine(persona3.ToString());
    }

    static void MuestraMensajePeso(Persona p)
    {
        int IMC = p.CalcularIMC();
        switch (IMC)
        {
            case Persona.PESO_IDEAL:
                Console.WriteLine("La persona esta en su peso ideal");
                break;
            case Persona.INFRAPESO:
                Console.WriteLine("La persona esta por debajo de su peso ideal");
                break;
            case Persona.SOBREPESO:
                Console.WriteLine("La persona esta por encima de su peso ideal");
                break;
        }
    }

    static void MuestraMayorDeEdad(Persona p)
    {

        if (p.EsMayorDeEdad())
        {
            Console.WriteLine("La persona es mayor de edad");
        }
        else
        {
            Console.WriteLine("La persona no es mayor de edad");
        }
    }
}
